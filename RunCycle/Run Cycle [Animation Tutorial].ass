[Script Info]
; Script generated by Aegisub 3.2.2
; http://www.aegisub.org/
Title: Default Aegisub file
ScriptType: v4.00+
WrapStyle: 0
ScaledBorderAndShadow: yes
YCbCr Matrix: TV.601
PlayResX: 1920
PlayResY: 1080

[Aegisub Project Garbage]
Audio File: Run Cycle [Animation Tutorial]_urlgot.com_.mp4
Video File: Run Cycle [Animation Tutorial]_urlgot.com_.mp4
Video AR Mode: 4
Video AR Value: 1.777778
Video Zoom Percent: 0.750000
Scroll Position: 150
Active Line: 155
Video Position: 16425

[V4+ Styles]
Format: Name, Fontname, Fontsize, PrimaryColour, SecondaryColour, OutlineColour, BackColour, Bold, Italic, Underline, StrikeOut, ScaleX, ScaleY, Spacing, Angle, BorderStyle, Outline, Shadow, Alignment, MarginL, MarginR, MarginV, Encoding
Style: Default,Arial,50,&H00FFFFFF,&H000000FF,&H00000000,&H00000000,0,0,0,0,100,100,0,0,1,2,2,2,10,10,10,1

[Events]
Format: Layer, Start, End, Style, Name, MarginL, MarginR, MarginV, Effect, Text
Dialogue: 0,0:00:00.00,0:00:02.04,Default,,0,0,0,,大家好！这里是你们的好兄弟Carbot
Dialogue: 0,0:00:02.04,0:00:03.42,Default,,0,0,0,,我们刚上架这些新T恤
Dialogue: 0,0:00:03.42,0:00:07.84,Default,,0,0,0,,https://www.teepublic.com/stores/carbotanimation\N
Dialogue: 0,0:00:03.42,0:00:07.84,Default,,0,0,0,,想购买的可以点击下方链接（简介里）
Dialogue: 0,0:00:07.88,0:00:11.01,Default,,0,0,0,,其中一件是Zerg Hi，另外一件是为了艾尔
Dialogue: 0,0:00:11.01,0:00:13.68,Default,,0,0,0,,如果你没看出来的话——这是T恤上在叉子周围的字
Dialogue: 0,0:00:13.68,0:00:18.21,Default,,0,0,0,,还有一件是三个Marine，裂盔哥和补丁哥和医疗兵。
Dialogue: 0,0:00:18.21,0:00:19.79,Default,,0,0,0,,等等，我的意思是两个枪兵和医疗兵
Dialogue: 0,0:00:19.79,0:00:23.43,Default,,0,0,0,,限时发售，心动不如行动
Dialogue: 0,0:00:23.43,0:00:27.69,Default,,0,0,0,,嘿，我是你们的好朋友John Burton，来自Carbot animations.
Dialogue: 0,0:00:27.69,0:00:31.95,Default,,0,0,0,,有观众让我多做一些动画教学
Dialogue: 0,0:00:31.95,0:00:33.30,Default,,0,0,0,,今天安排上了
Dialogue: 0,0:00:33.30,0:00:39.99,Default,,0,0,0,,首先，我们所有的动画都是用Adobe Animate CC
Dialogue: 0,0:00:39.99,0:00:42.75,Default,,0,0,0,,你可以在adobe.com上找到
Dialogue: 0,0:00:42.75,0:00:44.25,Default,,0,0,0,,这不是恰饭视频
Dialogue: 0,0:00:44.25,0:00:47.46,Default,,0,0,0,,因此这完全是用爱发电
Dialogue: 0,0:00:47.46,0:00:49.98,Default,,0,0,0,,对我来说这款软件毫无难度
Dialogue: 0,0:00:49.98,0:00:52.44,Default,,0,0,0,,今天要做的动画是跑步循环
Dialogue: 0,0:00:52.44,0:00:54.48,Default,,0,0,0,,我们将以叉子的跑步动作为例
Dialogue: 0,0:00:54.48,0:00:57.15,Default,,0,0,0,,当你在创作跑步循环动画
Dialogue: 0,0:00:57.15,0:01:00.39,Default,,0,0,0,,尤其是在用An CC画跑步动作时
Dialogue: 0,0:01:00.39,0:01:02.61,Default,,0,0,0,,最重要的就是画出最夸张的姿势
Dialogue: 0,0:01:02.61,0:01:08.19,Default,,0,0,0,,比如一条胳膊尽可能靠前，一条腿尽可能向后。
Dialogue: 0,0:01:08.19,0:01:10.14,Default,,0,0,0,,画另外一对胳膊腿也是同样的道理
Dialogue: 0,0:01:10.14,0:01:16.29,Default,,0,0,0,,当你画完角色跑步的轮廓后
Dialogue: 0,0:01:16.29,0:01:18.51,Default,,0,0,0,,就可以进行下一步：把它变成一个元件(symbol)并且命名 (默认快捷键F8）
Dialogue: 0,0:01:18.51,0:01:24.15,Default,,0,0,0,,元件有自己的时间线并且会在整个主时间线上不断循环。
Dialogue: 0,0:01:24.15,0:01:28.59,Default,,0,0,0,,因此重用这个动作循环非常容易
Dialogue: 0,0:01:28.59,0:01:30.69,Default,,0,0,0,,如果角色需要跑过屏幕
Dialogue: 0,0:01:30.69,0:01:32.40,Default,,0,0,0,,你不需要重复每个步骤
Dialogue: 0,0:01:32.40,0:01:35.94,Default,,0,0,0,,只要你编辑好它的动画，就会一直循环它自己的动作
Dialogue: 0,0:01:35.94,0:01:38.04,Default,,0,0,0,,因此我所做的就是用很多图层
Dialogue: 0,0:01:38.04,0:01:39.39,Default,,0,0,0,,身体独立为一个图层
Dialogue: 0,0:01:39.39,0:01:40.68,Default,,0,0,0,,你画好身体之后
Dialogue: 0,0:01:40.68,0:01:45.88,Default,,0,0,0,,你可以创建一个新图层，再画一个从肩膀到身体上方的手臂
Dialogue: 0,0:01:45.94,0:01:47.62,Default,,0,0,0,,你就可以看到整个过程
Dialogue: 0,0:01:47.62,0:01:49.68,Default,,0,0,0,,完成手臂的绘画和上色工作后
Dialogue: 0,0:01:49.68,0:01:51.76,Default,,0,0,0,,我要把这个手臂也转换成元件
Dialogue: 0,0:01:51.84,0:01:54.21,Default,,0,0,0,,现在是元件套元件
Dialogue: 0,0:01:54.21,0:01:55.71,Default,,0,0,0,,工作有些进展了
Dialogue: 0,0:01:55.71,0:01:57.72,Default,,0,0,0,,双击这个元件
Dialogue: 0,0:01:57.72,0:01:59.76,Default,,0,0,0,,事实上我们又一次将它变成了元件
Dialogue: 0,0:01:59.76,0:02:04.77,Default,,0,0,0,,原因是我们想给这两条手臂加上动画
Dialogue: 0,0:02:04.77,0:02:08.94,Default,,0,0,0,,如果你这么做，就会自动将其变为元件
Dialogue: 0,0:02:08.94,0:02:11.76,Default,,0,0,0,,我们想确保元件的锚点在肩膀上
Dialogue: 0,0:02:11.76,0:02:13.59,Default,,0,0,0,,锚点就是此处的小白点
Dialogue: 0,0:02:13.59,0:02:17.07,Default,,0,0,0,,这就是元件的旋转中心点
Dialogue: 0,0:02:17.07,0:02:19.44,Default,,0,0,0,,决定了元件如何旋转、变形
Dialogue: 0,0:02:19.44,0:02:27.09,Default,,0,0,0,,我们要给元件增加 移动补间(motion tween) ...(作者口误)
Dialogue: 0,0:02:27.09,0:02:32.25,Default,,0,0,0,,总的来说就是要让手臂在最前和最后两个位置之间来回摆动
Dialogue: 0,0:02:32.25,0:02:38.34,Default,,0,0,0,,完成这步之后，我们就可以返回身体部分做另一只手臂的工作
Dialogue: 0,0:02:38.34,0:02:40.95,Default,,0,0,0,,这个循环的时长大概是10帧
Dialogue: 0,0:02:40.95,0:02:46.50,Default,,0,0,0,,因此所有动画长度都要是10帧，比如手臂来回摆动也是10帧
Dialogue: 0,0:02:46.50,0:02:47.70,Default,,0,0,0,,复制这个手臂
Dialogue: 0,0:02:47.70,0:02:51.15,Default,,0,0,0,,把它放到另一层，放置在身体后面
Dialogue: 0,0:02:51.15,0:02:53.25,Default,,0,0,0,,因为我们的循环是10帧
Dialogue: 0,0:02:53.25,0:02:56.22,Default,,0,0,0,,偏移最大的是第6帧
Dialogue: 0,0:02:56.26,0:03:00.18,Default,,0,0,0,,因此反方向手臂的动作从第六帧开始
Dialogue: 0,0:03:00.18,0:03:02.34,Default,,0,0,0,,方法是点击属性页面
Dialogue: 0,0:03:02.34,0:03:08.94,Default,,0,0,0,,将first选项参数改为6
Dialogue: 0,0:03:08.94,0:03:11.82,Default,,0,0,0,,这意味着它将从第六帧开始运动而不是第一帧
Dialogue: 0,0:03:11.82,0:03:13.02,Default,,0,0,0,,So I don't want to lose you guys here.
Dialogue: 0,0:03:13.02,0:03:17.40,Default,,0,0,0,,从第六帧开始的原因是：这个动作离第一帧最远
Dialogue: 0,0:03:17.40,0:03:19.59,Default,,0,0,0,,而不是第十帧离第一帧最远
Dialogue: 0,0:03:19.59,0:03:27.75,Default,,0,0,0,,第十帧的下一帧就是第一帧，因为整个过程会循环 
Dialogue: 0,0:03:27.75,0:03:32.40,Default,,0,0,0,,第六帧是运动最远的一帧，它是动作过程的中点
Dialogue: 0,0:03:32.40,0:03:37.44,Default,,0,0,0,,这就是为什么你想让其中一只手臂从第六帧开始，而另一只从第一帧开始。
Dialogue: 0,0:03:37.44,0:03:42.48,Default,,0,0,0,,我会让两条手臂交错前后摆动
Dialogue: 0,0:03:42.48,0:03:45.04,Default,,0,0,0,,并循环这个过程
Dialogue: 0,0:03:45.12,0:03:47.49,Default,,0,0,0,,还要对两条腿做同样的操作
Dialogue: 0,0:03:47.49,0:03:51.12,Default,,0,0,0,,在前面这条腿和身体之间新建图层
Dialogue: 0,0:03:51.12,0:03:54.66,Default,,0,0,0,,画一条腿，转换为元件
Dialogue: 0,0:03:54.66,0:03:57.96,Default,,0,0,0,,这次，我们要让动画更加生动一些。
Dialogue: 0,0:03:58.44,0:04:01.14,Default,,0,0,0,,我们要做逐帧动画
Dialogue: 0,0:04:01.14,0:04:02.91,Default,,0,0,0,,这意味着我们要亲手画每一帧
Dialogue: 0,0:04:02.91,0:04:09.09,Default,,0,0,0,,这么做的原因是，跑步时膝盖和脚掌都会变形
Dialogue: 0,0:04:09.09,0:04:12.90,Default,,0,0,0,,因此为腿部做逐帧动画会更好
Dialogue: 0,0:04:12.90,0:04:15.39,Default,,0,0,0,,这样看上去就不会太僵硬，像真正在跑步一样。
Dialogue: 0,0:04:15.39,0:04:19.98,Default,,0,0,0,,如果你还是用元件和补间来做，你会发现动作看上去有点僵硬
Dialogue: 0,0:04:19.98,0:04:21.48,Default,,0,0,0,,对于初学者，完全可以这么做
Dialogue: 0,0:04:21.48,0:04:27.12,Default,,0,0,0,,想节约时间的话，你完全可以使用同样的办法来做动画 
Dialogue: 0,0:04:27.12,0:04:30.36,Default,,0,0,0,,我将会逐帧作画让你观察整个过程
Dialogue: 0,0:04:30.36,0:04:32.73,Default,,0,0,0,,还是从腿部关键帧开始
Dialogue: 0,0:04:32.73,0:04:40.74,Default,,0,0,0,,这是腿部运动的最前一帧和最后一帧，运动的极限位置在第六帧
Dialogue: 0,0:04:41.64,0:04:46.50,Default,,0,0,0,,因此我们先画这些关键帧，然后再画中间帧 
Dialogue: 0,0:04:46.50,0:04:49.68,Default,,0,0,0,,基本上就是将运动过程慢慢画出来
Dialogue: 0,0:04:49.68,0:04:54.06,Default,,0,0,0,,你可以看到，当脚接触地面时会弯曲
Dialogue: 0,0:04:54.06,0:04:55.89,Default,,0,0,0,,整个腿部的形状也改变了一些
Dialogue: 0,0:04:55.89,0:05:04.56,Default,,0,0,0,,上色时需要退出元件，再复制腿部到位于手臂和身体中间的一个新的层
Dialogue: 0,0:05:04.56,0:05:06.93,Default,,0,0,0,,这时你点击播放，
Dialogue: 0,0:05:06.93,0:05:12.18,Default,,0,0,0,,你就会看到一个双脚同时跳跃的叉子
Dialogue: 0,0:05:12.18,0:05:20.88,Default,,0,0,0,,当你没有把其中一条腿设置为从第六帧开始播放，就会出现这种情况。
Dialogue: 0,0:05:20.88,0:05:26.82,Default,,0,0,0,,因此我们要将一条腿设置为从第一帧开始运动，另一条腿从第六帧开始
Dialogue: 0,0:05:26.82,0:05:28.08,Default,,0,0,0,,再回到属性页面
Dialogue: 0,0:05:28.08,0:05:31.68,Default,,0,0,0,,要将左手和右脚同步
Dialogue: 0,0:05:31.68,0:05:35.19,Default,,0,0,0,,左手向前摆动时，右脚也向前摆动
Dialogue: 0,0:05:35.19,0:05:36.33,Default,,0,0,0,,反之亦然
Dialogue: 0,0:05:36.33,0:05:42.56,Default,,0,0,0,,这样它们就同步了
Dialogue: 0,0:05:42.60,0:05:46.70,Default,,0,0,0,,这种方式可以让叉子有正确的跑步动作
Dialogue: 0,0:05:46.70,0:05:48.09,Default,,0,0,0,,如果你反向操作
Dialogue: 0,0:05:48.09,0:05:50.61,Default,,0,0,0,,假设你顺拐了
Dialogue: 0,0:05:50.61,0:05:53.07,Default,,0,0,0,,那看起来就很奇怪了
Dialogue: 0,0:05:53.07,0:05:57.42,Default,,0,0,0,,这毫无道理
Dialogue: 0,0:05:57.42,0:06:03.93,Default,,0,0,0,,就像你的手拉着你的脚在跑，这肯定不是你想要的效果。
Dialogue: 0,0:06:03.93,0:06:08.13,Default,,0,0,0,,确保四肢有正确的动作循环
Dialogue: 0,0:06:08.13,0:06:11.76,Default,,0,0,0,,手脚动作相反
Dialogue: 0,0:06:11.76,0:06:16.08,Default,,0,0,0,,其中一对同时开始，另一对从第六帧开始。
Dialogue: 0,0:06:16.08,0:06:21.30,Default,,0,0,0,,如果你的循环有8帧，那么另一对从第五帧开始
Dialogue: 0,0:06:21.30,0:06:25.08,Default,,0,0,0,,如果循环有20帧，那么另一对从11帧开始，以此类推
Dialogue: 0,0:06:25.08,0:06:26.58,Default,,0,0,0,,差不多是中间帧的样子
Dialogue: 0,0:06:26.58,0:06:28.68,Default,,0,0,0,,为了给跑步动作增加更多细节
Dialogue: 0,0:06:28.68,0:06:33.45,Default,,0,0,0,,我为胸前的蓝圈设置了单独的一层
Dialogue: 0,0:06:33.45,0:06:39.09,Default,,0,0,0,,把它转换为元件，让他随着身体运动展现出拉伸和变形效果
Dialogue: 0,0:06:39.09,0:06:42.45,Default,,0,0,0,,在跑步时轻微地从左到右摆动
Dialogue: 0,0:06:42.45,0:06:45.66,Default,,0,0,0,,你可以跳过这一步，画个圈就行
Dialogue: 0,0:06:45.66,0:06:51.33,Default,,0,0,0,,这作为选做内容，可以让跑步动画更生动
Dialogue: 0,0:06:51.33,0:06:52.83,Default,,0,0,0,,如果你退出元件模式
Dialogue: 0,0:06:52.83,0:06:57.51,Default,,0,0,0,,你可以看到很不错的效果 
Dialogue: 0,0:06:57.51,0:07:03.48,Default,,0,0,0,,通过将整个模块转换成另一个元件，我们还能让动作看起来更有趣一些
Dialogue: 0,0:07:03.48,0:07:04.83,Default,,0,0,0,,你可以随便起个名
Dialogue: 0,0:07:04.83,0:07:08.19,Default,,0,0,0,,这么做的原因是，虽然叉子已经在跑了
Dialogue: 0,0:07:08.19,0:07:10.68,Default,,0,0,0,,但是它没有弹跳的动作
Dialogue: 0,0:07:10.68,0:07:13.26,Default,,0,0,0,,而是有点像在地面在滑行
Dialogue: 0,0:07:13.26,0:07:15.60,Default,,0,0,0,,对简单的动画来说这不是什么问题
Dialogue: 0,0:07:15.60,0:07:20.31,Default,,0,0,0,,但如果你想更进一步,也是可行的
Dialogue: 0,0:07:20.31,0:07:24.27,Default,,0,0,0,,将整个模块转换成额外的元件
Dialogue: 0,0:07:24.27,0:07:27.66,Default,,0,0,0,,右键，并增加动作补间
Dialogue: 0,0:07:27.66,0:07:30.36,Default,,0,0,0,,为叉子增加弹跳的感觉
Dialogue: 0,0:07:30.36,0:07:31.50,Default,,0,0,0,,在这个时间线里
Dialogue: 0,0:07:31.50,0:07:37.11,Default,,0,0,0,,我们想让他弹跳两次，因为它是两腿交替运动的
Dialogue: 0,0:07:37.11,0:07:39.99,Default,,0,0,0,,因此要将第一帧和最后一帧设置为完全相同的一帧
Dialogue: 0,0:07:39.99,0:07:44.31,Default,,0,0,0,,如果没有改键的话，按F6就可以了
Dialogue: 0,0:07:44.31,0:07:47.34,Default,,0,0,0,,中间帧还是第六帧
Dialogue: 0,0:07:47.34,0:07:51.36,Default,,0,0,0,,我们也要把它放到相同的位置
Dialogue: 0,0:07:51.36,0:07:53.88,Default,,0,0,0,,同样在中间帧上按F6
Dialogue: 0,0:07:53.88,0:07:57.87,Default,,0,0,0,,在这三个关键帧之间的帧
Dialogue: 0,0:07:59.34,0:08:09.51,Default,,0,0,0,,我选择第三帧和第七帧，将元件稍微下移 
Dialogue: 0,0:08:09.51,0:08:11.76,Default,,0,0,0,,现在回放，你就能看见
Dialogue: 0,0:08:11.76,0:08:13.19,Default,,0,0,0,,叉子有一点弹跳的动作
Dialogue: 0,0:08:13.19,0:08:17.22,Default,,0,0,0,,另外还略微有一点点前倾
Dialogue: 0,0:08:17.22,0:08:21.27,Default,,0,0,0,,这一步你省略也是可以的
Dialogue: 0,0:08:21.27,0:08:22.68,Default,,0,0,0,,如果现在退出元件
Dialogue: 0,0:08:22.68,0:08:26.73,Default,,0,0,0,,就能看到叉子在跑动的同时还有弹跳
Dialogue: 0,0:08:26.73,0:08:31.56,Default,,0,0,0,,大多数时候，对优秀的动画来说
Dialogue: 0,0:08:31.56,0:08:34.23,Default,,0,0,0,,要把内容分成各个章节
Dialogue: 0,0:08:34.23,0:08:36.57,Default,,0,0,0,,因此不会一次性把所有事做完
Dialogue: 0,0:08:36.57,0:08:40.56,Default,,0,0,0,,普遍是在之前的动画中调整、新增内容
Dialogue: 0,0:08:40.56,0:08:42.18,Default,,0,0,0,,确保你做了合理的规划
Dialogue: 0,0:08:42.18,0:08:46.50,Default,,0,0,0,,这就是如何做一个不错的跑步循环动画的教程
Dialogue: 0,0:08:46.50,0:08:48.48,Default,,0,0,0,,这个动画有点难
Dialogue: 0,0:08:48.48,0:08:50.55,Default,,0,0,0,,尤其是对初学者而言
Dialogue: 0,0:08:50.55,0:08:53.34,Default,,0,0,0,,因为四肢会随意摆动
Dialogue: 0,0:08:53.34,0:08:55.23,Default,,0,0,0,,不能顺拐
Dialogue: 0,0:08:55.23,0:08:59.33,Default,,0,0,0,,很多人都对四肢的位置有些困惑 
Dialogue: 0,0:08:59.33,0:09:07.50,Default,,0,0,0,,你可以将在身体后面的四肢调暗，就像我在这个动画里做的一样
Dialogue: 0,0:09:07.50,0:09:11.25,Default,,0,0,0,,你可以选中这些在身体后面的元件
Dialogue: 0,0:09:11.25,0:09:16.77,Default,,0,0,0,,进入色彩界面
Dialogue: 0,0:09:16.77,0:09:22.80,Default,,0,0,0,,点击下拉菜单中的亮度选项，将其调低一点
Dialogue: 0,0:09:22.80,0:09:24.87,Default,,0,0,0,,这将让你理解其中原理
Dialogue: 0,0:09:24.87,0:09:28.53,Default,,0,0,0,,你也可以在这里直接调节不透明度
Dialogue: 0,0:09:28.53,0:09:31.02,Default,,0,0,0,,进行下一步工作之前，我们可以先做点规划
Dialogue: 0,0:09:31.02,0:09:34.20,Default,,0,0,0,,以下是对于群集镜头的处理方法（crowd shots 大群人物或其他角色的镜头）
Dialogue: 0,0:09:34.20,0:09:37.42,Default,,0,0,0,,如果我们想让很多人物在屏幕上奔跑
Dialogue: 0,0:09:37.42,0:09:42.15,Default,,0,0,0,,但是不想一直用移动补间来制作跑过的效果
Dialogue: 0,0:09:42.15,0:09:46.68,Default,,0,0,0,,就可以再次创建一个叉子的元件
Dialogue: 0,0:09:46.68,0:09:49.26,Default,,0,0,0,,比如这个蹦蹦跳跳的叉子
Dialogue: 0,0:09:49.26,0:09:57.96,Default,,0,0,0,,用它来创建几秒钟的跑过屏幕的动画
Dialogue: 0,0:09:57.96,0:09:59.01,Default,,0,0,0,,真的是太简单了
Dialogue: 0,0:09:59.01,0:10:04.59,Default,,0,0,0,,只需要右键，增加移动补间，再移动到最前的一帧，将它拖出屏幕
Dialogue: 0,0:10:04.59,0:10:08.97,Default,,0,0,0,,再次退出元件
Dialogue: 0,0:10:08.97,0:10:13.26,Default,,0,0,0,,we're like inception ising here like crazy when she accepted that symbol,
Dialogue: 0,0:10:13.26,0:10:16.32,Default,,0,0,0,,你可以复制粘贴这些元件并缩放
Dialogue: 0,0:10:16.32,0:10:18.24,Default,,0,0,0,,将他们放在其他帧后面
Dialogue: 0,0:10:18.24,0:10:21.87,Default,,0,0,0,,这样就有了漂亮的集群镜头和透视效果
Dialogue: 0,0:10:21.87,0:10:24.09,Default,,0,0,0,,所有叉子奔跑的速度都一样
Dialogue: 0,0:10:24.09,0:10:29.34,Default,,0,0,0,,但这些叉子位置有前后之分，所以这帮你减少了很多工作
Dialogue: 0,0:10:29.34,0:10:35.43,Default,,0,0,0,,熟悉软件并合理利用它，可以节省你非常多的时间
Dialogue: 0,0:10:35.43,0:10:40.95,Default,,0,0,0,,刚开始在youtube上发视频的时候我并不知道这些。
Dialogue: 0,0:10:40.95,0:10:46.38,Default,,0,0,0,,做的视频越来越多，我就越来越后悔之前没有深入学习软件技巧
Dialogue: 0,0:10:46.38,0:10:51.03,Default,,0,0,0,,这就是全部内容了。希望你喜欢这个教程，同时也希望它对你有帮助。
Dialogue: 0,0:10:51.03,0:10:53.28,Default,,0,0,0,,这个教程比较专业
Dialogue: 0,0:10:53.28,0:11:02.55,Default,,0,0,0,,花些时间认真思考程序的功能细节，对你理解、驾驭这个程序会有极大的帮助
Dialogue: 0,0:11:02.55,0:11:04.74,Default,,0,0,0,,这就是基础的跑步循环动画
Dialogue: 0,0:11:04.74,0:11:07.23,Default,,0,0,0,,再次说明，你不一定要做上下跳动的部分
Dialogue: 0,0:11:07.23,0:11:09.00,Default,,0,0,0,,你可以在这一步之前就收工
Dialogue: 0,0:11:09.00,0:11:11.94,Default,,0,0,0,,但这些就像蛋糕上的糖霜
Dialogue: 0,0:11:11.94,0:11:15.60,Default,,0,0,0,,可以美化、改善你的动画
Dialogue: 0,0:11:15.60,0:11:20.25,Default,,0,0,0,,喜欢的话可以订阅，希望你享受这期教程
Dialogue: 0,0:11:20.25,0:11:25.71,Default,,0,0,0,,让我知道你之后想看到哪些动画教程
Dialogue: 0,0:11:25.71,0:11:29.73,Default,,0,0,0,,好兄弟以后再和大家聊天了
Dialogue: 0,0:11:29.73,0:11:31.29,Default,,0,0,0,,这周末我们要出去逛逛
Dialogue: 0,0:11:31.29,0:11:32.01,Default,,0,0,0,,再见
